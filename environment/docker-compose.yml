# Development project infrastructure generated over the Docker
version: "3.7"

services:
  # MySQL
  db:
    image: mariadb
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql:z
      - ./initdb:/docker-entrypoint-initdb.d:z
    env_file:
      - ./env/mysql.env

  # Nginx
  server:
    build:
      context: ./docker/nginx
      target: development
    links:
      - wordpress
    ports:
      - 80:80
    volumes:
      - ../:/app:z
      - ./docker/nginx/etc/nginx.conf:/etc/nginx/nginx.conf:z

  # PHP-FPM with WP dependencies
  wordpress:
    build:
      context: ./docker/wp-fpm
      target: development
    volumes:
      - ../:/app:z
    env_file:
      - ./env/app.env
      - ./env/xdebug.env
    depends_on:
      - db
      - smtp

  # WP CLI
  wp:
    build:
      context: ./docker/wp-cli
      target: development
    env_file:
      - ./env/app.env
      - ./env/install.env
      - ./env/xdebug.env
    volumes:
      - ../:/app:z
      - ./docker/wp-cli/aztlan-install:/usr/local/bin/aztlan-install:z

  # Node 8.2 with NPM/Yarn/npx
  assets-node:
    image: node:10
    volumes:
      - ../:/app:z
    working_dir: /app/assets

  # Composer
  inc-composer:
    image: composer
    volumes:
      - ../:/app:z
      # Map local user Composer directory with container for cache packages
      - ~/.docker_cache/composer:/tmp/cache:z
    working_dir: /app/inc

  # Composer WP packages
  wp-composer:
    image: composer
    volumes:
      - ../:/app:z
      # Map local user Composer directory with container for cache packages
      - ~/.docker_cache/composer:/tmp/cache
    working_dir: /app/wp-packages

  # Composer CLI
  cli-composer:
    image: composer
    volumes:
      - ../:/app:z
      # Map local user Composer directory with container for cache packages
      - ~/.docker_cache/composer:/tmp/cache
    working_dir: /app/cli

  # Composer CLI
  phpqa-composer:
    image: composer
    volumes:
      - ../:/app
      # Map local user Composer directory with container for cache packages
      - ~/.docker_cache/composer:/tmp/cache
    working_dir: /app/phpqa

  # PHPQA
  phpqa:
    image: jakzal/phpqa:alpine
    volumes:
      - ../:/app
    working_dir: /app/phpqa

  # Test SMTP server
  smtp:
    image: schickling/mailcatcher
    ports:
      - 1025
      - 1080:1080
    environment:
      MAILCATCHER_PORT: 1025

  # Deployer
  deployer:
    build:
      context: ./docker/deployer
      args:
        - PHP_VERSION=7
        - DEPLOYER_VERSION=latest
    volumes:
      - ../:/app:z
      - ../deploy/.ssh:/root/.ssh:z
    env_file:
      - ./env/deploy.env

  # Xdebug profiling viewer
  webgrind:
    image: wodby/webgrind:1.5
    ports:
      - 8000:8080
    volumes:
      - ../xdebug/profiler:/tmp:z
      - ../:/app:z

  # Live reload
  livereload:
    build:
      context: ./docker/livereload
    ports:
      - 35729:35729
    volumes:
      - ../xdebug/profiler:/tmp:z
      - ../:/app:z

volumes:
  mysql_data:
    name: ${VOLUME_PREFIX}mysql_data
